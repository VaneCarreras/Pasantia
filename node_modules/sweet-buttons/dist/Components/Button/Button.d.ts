import { VariantProps } from "class-variance-authority";
import React, { ComponentProps } from "react";
declare const buttonStyles: (props?: ({
    variant?: "link" | "outline" | "shadow" | "solid" | "ghost" | "soft" | null | undefined;
    colorscheme?: "error" | "confirm" | "violet" | "primary" | "warning" | null | undefined;
    size?: "sm" | "md" | "lg" | null | undefined;
    shape?: "none" | "md" | "lg" | "pill" | "xl" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
type ButtonProps = ComponentProps<"button"> & VariantProps<typeof buttonStyles> & {
    _isDisabled?: boolean;
    ariaLabel?: string;
};
declare const Button: React.ForwardRefExoticComponent<Omit<ButtonProps, "ref"> & React.RefAttributes<HTMLButtonElement>>;
export default Button;
//# sourceMappingURL=Button.d.ts.map